{"version":3,"sources":["components/FeedBackOptions/FeedBackOptions.module.css","components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedBackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/Section/Section.js","components/Counter/Counter.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","btns","Object","keys","map","btn","index","className","s","type","onClick","Statistics","good","neutral","bad","total","positiveFeedPercentage","list","Notification","message","Section","title","children","section","defaultProps","Counter","state","increment","e","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","totalFeedback","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oIACAA,EAAOC,QAAU,CAAC,IAAM,+B,gBCAxBD,EAAOC,QAAU,CAAC,KAAO,2B,gBCAzBD,EAAOC,QAAU,CAAC,QAAU,2B,+MC4BbC,EAzBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC5BC,EAAOC,OAAOC,KAAKJ,GACzB,OACE,8BACGE,EAAKG,KAAI,SAACC,EAAKC,GAAN,OACR,wBACEC,UAAWC,IAAEH,IAEbI,KAAK,SACLC,QAAS,kBAAMV,EAAgBK,IAJjC,SAMGA,GAJIC,S,gBCWAK,EAlBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,uBAA9B,OACjB,qBAAIT,UAAWC,IAAES,KAAjB,UACE,uCAAUL,EAAV,OACA,0CAAaC,EAAb,OACA,sCAASC,EAAT,OACA,wCAAWC,KACX,oDAAuBC,EAAvB,WCGWE,EAVM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,8BACE,4BAAIA,O,wBCDFC,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,sBAAKf,UAAWC,IAAEe,QAAlB,UACE,6BAAKF,IACJC,MAILF,EAAQI,aAAe,CACrBH,MAAO,IAQMD,QC8CAK,E,4MAzDbC,MAAQ,CACNd,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPa,UAAY,SAACC,GACX,EAAKC,UAAS,SAACC,GACb,OAAO,eACJF,EAAIE,EAAUF,GAAK,O,EAK1BG,mBAAqB,SAACnB,EAAMC,EAASC,GACnC,OAAOF,EAAOC,EAAUC,G,EAG1BkB,gCAAkC,SAACpB,EAAMC,EAASC,GAAhB,OAChCmB,KAAKC,MAAc,IAAPtB,EAAc,EAAKmB,mBAAmBnB,EAAMC,EAASC,K,4CAEnE,WACE,MAA+BqB,KAAKT,MAA5Bd,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBsB,EAAgBD,KAAKJ,mBAAmBnB,EAAMC,EAASC,GACvDE,EAAyBmB,KAAKH,gCAClCpB,EACAC,EACAC,GAGF,OACE,gCACE,cAAC,EAAD,CAASO,MAAM,6BAAf,SACE,cAAC,EAAD,CACEtB,QAASoC,KAAKT,MACd1B,gBAAiBmC,KAAKR,cAI1B,cAAC,EAAD,CAASN,MAAM,aAAf,SACGe,EAAgB,EACf,cAAC,EAAD,CACExB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOqB,EACPpB,uBAAwBA,IAG1B,cAAC,EAAD,CAAcG,QAAQ,+B,GAlDZkB,IAAMC,WCIbC,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCFNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f88034eb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedBackOptions_btn__2OqxC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3FE7E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__RJ5Qg\"};","import React from \"react\";\nimport s from \"./FeedBackOptions.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  const btns = Object.keys(options);\n  return (\n    <div>\n      {btns.map((btn, index) => (\n        <button\n          className={s.btn}\n          key={index}\n          type=\"button\"\n          onClick={() => onLeaveFeedback(btn)}\n        >\n          {btn}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.string.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n  btn: PropTypes.node.isRequired,\n  index: PropTypes.node.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Statistics.module.css\";\n\nconst Statistics = ({ good, neutral, bad, total, positiveFeedPercentage }) => (\n  <ul className={s.list}>\n    <li>Good:{good} </li>\n    <li>Neutral:{neutral} </li>\n    <li>Bad:{bad} </li>\n    <li>Total:{total}</li>\n    <li>Positive feedback:{positiveFeedPercentage}%</li>\n  </ul>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Notification = ({ message }) => (\n  <div>\n    <p>{message}</p>\n  </div>\n);\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Section.module.css\";\n\nconst Section = ({ title, children }) => (\n  <div className={s.section}>\n    <h2>{title}</h2>\n    {children}\n  </div>\n);\n\nSection.defaultProps = {\n  title: \"\",\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React from \"react\";\n/* import css from './Counter.module.css' */\nimport FeedbackOptions from \"../FeedBackOptions/FeedbackOptions\";\nimport Statistics from \"../Statistics/Statistics\";\nimport Notification from \"../Notification/Notification\";\nimport s from \"./Counter.module.css\";\nimport Section from \"../Section/Section\";\n\nclass Counter extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  increment = (e) => {\n    this.setState((prevState) => {\n      return {\n        [e]: prevState[e] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = (good, neutral, bad) => {\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = (good, neutral, bad) =>\n    Math.round((good * 100) / this.countTotalFeedback(good, neutral, bad));\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalFeedback = this.countTotalFeedback(good, neutral, bad);\n    const positiveFeedPercentage = this.countPositiveFeedbackPercentage(\n      good,\n      neutral,\n      bad\n    );\n\n    return (\n      <div>\n        <Section title=\"Please leave your feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.increment}\n          />\n        </Section>\n\n        <Section title=\"Statictics\">\n          {totalFeedback > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={totalFeedback}\n              positiveFeedPercentage={positiveFeedPercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default Counter;\n","import React from \"react\";\nimport \"./App.css\";\nimport Counter from \"./components/Counter/Counter\";\n\nfunction App() {\n  return (\n    <div>\n      <Counter />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}